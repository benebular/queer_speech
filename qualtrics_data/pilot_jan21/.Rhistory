install.packages("tidyverse")
install.packages("lme4")
install.packages(c("backports", "bayestestR", "BH", "blob", "boot", "broom", "callr", "car", "class", "cli", "clipr", "cluster", "codetools", "colorspace", "conquer", "corrplot", "cowplot", "cpp11", "crayon", "curl", "data.table", "DBI", "dbplyr", "desc", "digest", "dplyr", "effectsize", "ellipsis", "emmeans", "fansi", "farver", "forcats", "foreign", "generics", "ggplot2", "ggrepel", "ggsignif", "glue", "haven", "highr", "hms", "htmltools", "insight", "isoband", "jsonlite", "KernSmooth", "knitr", "labeling", "lattice", "lifecycle", "lme4", "lmerTest", "lubridate", "magrittr", "maptools", "MASS", "Matrix", "MatrixModels", "matrixStats", "mgcv", "mime", "mvtnorm", "nlme", "nnet", "openssl", "openxlsx", "parameters", "pbkrtest", "pillar", "pkgbuild", "pkgload", "processx", "ps", "quantreg", "R6", "Rcpp", "RcppArmadillo", "RcppEigen", "readr", "reprex", "rio", "rlang", "rmarkdown", "rprojroot", "rstatix", "rstudioapi", "rvest", "sp", "SparseM", "spatial", "statmod", "stringi", "survey", "survival", "testthat", "tibble", "tidyr", "tidyselect", "tidyverse", "tinytex", "utf8", "vctrs", "viridisLite", "withr", "xfun", "zip"))
## Author: Ben Lang, blang@ucsd.edu
library(lmerTest)
library(dplyr) # this checks for normality
library(ggpubr) # this plots normality
library(magrittr)
library(effects)
#library(ggplot2)
library(tidyr)
#library(scales)
library(reshape2)
library(lme4)
library(emmeans)
library(forcats)
library(psycho)
library(tibble)
library(janitor)
setwd('/Users/bcl/Documents/GitHub/queer_speech/qualtrics_data/pilot_jan21')
queer = read.csv('queer-speech_January 22, 2022_22.36.csv')
queer <- subset(queer, Status == 0 | Status == "Response Type")
queer <- select(queer, -contains(c("First.Click","Last.Click","Page.Submit","Click.Count")))
# queer$Participant <- 1:nrow(queer)-1
queer <- select(queer, -c(RecipientLastName, RecipientFirstName, RecipientEmail, ExternalReference, LocationLatitude, LocationLongitude, DistributionChannel, IPAddress))
queer <- select(queer, -c(P1_1:Q31_1))
queer <- queer %>% relocate(D2:Q47, .before = 1)
queer <- queer %>% relocate(Q56, .before = 1)
queer <- add_column(queer, Participant = 1:nrow(queer)-1, .before = 1)
queer[1,] <- gsub(".*- (.+) -.*", "\\1", queer[1,])
queer[1,] <- queer %>% separate(X1_Q36_1:X26_Q63_1, Question, Token)
# colnames(queer)[grepl('Q36',colnames(queer))] <- 'gender_id'
# colnames(queer)[grepl('Q60',colnames(queer))] <- 'gender_id'
queer_long <- queer %>% gather(Qualtrics_Trial_Num, Rating, X1_Q36_1:X26_Q63_1)
queer_long$Rating <- gsub(".*- (.+) -.*", "\\1", queer_long$Rating)
View(queer_long)
View(queer)
queer_qid <- queer[-1]
View(queer_qid)
queer_qid <- queer[-1,]
View(queer_qid)
queer_stimname <- row_to_names(queer, row_number = 2)
View(queer_stimname)
queer_stimname <- row_to_names(queer, row_number = 1)
View(queer_stimname)
## Queer Speech Data Analysis and Visualization Treasure Trove
## Author: Ben Lang, blang@ucsd.edu
library(lmerTest)
library(dplyr) # this checks for normality
library(ggpubr) # this plots normality
library(magrittr)
library(effects)
#library(ggplot2)
library(tidyr)
#library(scales)
library(reshape2)
library(lme4)
library(emmeans)
library(forcats)
library(psycho)
library(tibble)
library(janitor)
setwd('/Users/bcl/Documents/GitHub/queer_speech/qualtrics_data/pilot_jan21')
queer = read.csv('queer-speech_January 22, 2022_22.36.csv')
queer <- subset(queer, Status == 0 | Status == "Response Type")
queer <- select(queer, -contains(c("First.Click","Last.Click","Page.Submit","Click.Count")))
# queer$Participant <- 1:nrow(queer)-1
queer <- select(queer, -c(RecipientLastName, RecipientFirstName, RecipientEmail, ExternalReference, LocationLatitude, LocationLongitude, DistributionChannel, IPAddress))
queer <- select(queer, -c(P1_1:Q31_1))
queer <- queer %>% relocate(D2:Q47, .before = 1)
queer <- queer %>% relocate(Q56, .before = 1)
queer <- add_column(queer, Participant = 1:nrow(queer)-1, .before = 1)
queer[1,] <- gsub(".*- (.+) -.*", "\\1", queer[1,])
queer[1,] <- queer %>% separate(X1_Q36_1:X26_Q63_1, Question, Token)
queer_qid <- queer[-1,]
queer_stimname <- row_to_names(queer, row_number = 1)
View(queer_stimname)

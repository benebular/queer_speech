installed.packages()
install.packages("tidyverse")
install.packages("lme4")
install.packages("lmer")
install.packages("nearey")
install.packages("ggplot2")
install.packages("vowels")
install.packages("xlsx")
data <- read.csv("/Volumes/MEG/NYUAD-Lab-Server/Personal Files/Ben/sounds/BIPHON_test0.csv")
View(data)
install.packages("reshape")
library(reshape)
mdata <- melt(data, id=c("id","time"))
mdata <- melt(data, id=c("P1","Q1"))
install.packages("tidyr")
install.packages("magrittr")
library("tidyr")
long_DF <- data %>% gather(trial, ppt_ans, X1_P1:X365_T2_Click.Count)
head(long_DF,20)
View(data)
library(xlsx)
dat <- open.csv('/Users/bcl/Desktop/lab stuff/BIPHON_test0.csv')
dat <- read.csv('/Users/bcl/Desktop/lab stuff/BIPHON_test0.csv')
View(dat)
library(readxl)
BIPHON_test0 <- read_excel("Desktop/lab stuff/BIPHON_test0.xls")
View(BIPHON_test0)
installed.packages()
library(vowels)
library(dplyr)
gather()
install.packages('tudyr')
install.packages('tidyr')
install.packages('magritter')
install.packages('magrittr')
install.packages("magrittr")
library(tidyr)
library(magrittr)
library(readxl)
BIPHON3_qualtrics <- read_excel("Desktop/lab stuff/BIPHON3_qualtrics.xls")
View(BIPHON3_qualtrics)
BIPHON3_long <- BIPHON3_qualtrics %>% gather(Subject, Response, sub22:sub36)
View(BIPHON3_long)
write.csv(BIPHON2_long, file='/Users/bcl/Desktop/lab stuff/BIPHON3_melt.csv')
write.csv(BIPHON3_long, file='/Users/bcl/Desktop/lab stuff/BIPHON3_melt.csv')
BIPHON3_long$Response <- ifelse(BIPHON$Response ="A", "1")
BIPHON3_long$Response <- ifelse(BIPHON$Response =="A", "1")
BIPHON3_long$Response <- ifelse(BIPHON3_long$Response =="A", "1")
BIPHON3_long$Response <- ifelse(BIPHON3_long$Response == "A", "1", "B")
BIPHON3_long$Response <- ifelse(BIPHON3_long$Response == "B", "2", "A")
BIPHON3_long <- BIPHON3_qualtrics %>% gather(Subject, Response, sub22:sub36)
BIPHON3_long$Response <- ifelse(BIPHON3_long$Response == "A", "1", "2")
write.csv(BIPHON3_long, file='/Users/bcl/Desktop/lab stuff/BIPHON3_melt.csv')
library(readxl)
BIPHON3 <- read_excel("Desktop/lab stuff/BIPHON3.xls")
View(BIPHON3)
library(lme4)
BIPHON3$Nativeness <- as.factor(BIPHON$Nativeness)
BIPHON3$Nativeness <- as.factor(BIPHON3$Nativeness)
BIPHON3$Correct <- as.factor(BIPHON3$Correct)
xglmer <- glmer(Correct ~ Nativeness + (1|subject), famile = binomial, data=BIPHON3)
xglmer <- glmer(Correct ~ Nativeness + (1|Subject), famile = binomial, data=BIPHON3)
xglmer <- glmer(Correct ~ Nativeness + (1|Subject), famile = binomial, data=BIPHON3)
BIPHON3$Response <- as.factor(BIPHON3$Response)
xglmer <- glmer(Correct ~ Nativeness + (1|Subject), famile = binomial, data=BIPHON3)
xglmer <- glmer(Correct ~ Nativeness + (1|Subject), family = binomial, data=BIPHON3)
summary(xglmer)
coef(xglmer)
exp(0.9589667)
2.608999/(1+2.608999)
exp(0.9230)
2.51683/(1+2.51683)
xglmer <- glmer(Correct ~ Nativeness + X_token + (1|Subject), family = binomial, data=BIPHON3)
xglmer <- glmer(Correct ~ Nativeness + (1|Subject), family = binomial, data=BIPHON3)
summary(xglmer)
xmdl <- lm(Correct ~ Nativeness)
xmdl <- lm(Correct ~ Nativeness, data=BIPHON3)
summary(xmdl)
xmdl <- lm(Correct ~ X_token, data=BIPHON3)
mytable <- read.table(Correct,Nativeness)
mytable <- read.table(BIPHON3$Correct, BIPHON3$Nativeness)
mytable <- table(BIPHON3$Correct, BIPHON3$Nativeness)
ftable(mytable)
install.packages(gmodels)
install.packages(gmodel)
install.packages('gmodels')
library(gmodels)
CrossTab(BIPHON3$Correct, BIPHON3$Nativeness)
CrossTable(BIPHON3$Correct, BIPHON3$Nativeness)
sum(BIPHON3$Correct)
library(readxl)
BIPHON3 <- read_excel("Desktop/lab stuff/BIPHON3.xls")
View(BIPHON3)
library(readxl)
BIPHON3 <- read_excel("Desktop/lab stuff/BIPHON3.xls")
View(BIPHON3)
BIPHON_subset_iy <- subset(BIPHON3, critical_vowel_token == "iy")
BIPHON_subset_yi <- subset(BIPHON3, critical_vowel_token == "yi")
BIPHON_subset_iY <- subset(BIPHON3, critical_vowel_token == "iʏ")
BIPHON_subset_Yi <- subset(BIPHON3, critical_vowel_token == "ʏi")
BIPHON_subset_yIH <- subset(BIPHON3, critical_vowel_token == "yɪ")
BIPHON_subset_IHy <- subset(BIPHON3, critical_vowel_token == "ɪy")
BIPHON_subset_YIH <- subset(BIPHON3, critical_vowel_token == "ʏɪ")
BIPHON_subset_IHY <- subset(BIPHON3, critical_vowel_token == "ɪʏ")
BIPHON_subset_yu <- subset(BIPHON3, critical_vowel_token == "yu")
BIPHON_subset_uy <- subset(BIPHON3, critical_vowel_token == "uy")
BIPHON_subset_i_alt_y <- rbind(BIPHON_subset_iy,BIPHON_subset_yi)
BIPHON_subset_i_alt_Y <- rbind(BIPHON_subset_iY,BIPHON_subset_Yi)
BIPHON_subset_IH_alt_Y <- rbind(BIPHON_subset_IHY,BIPHON_subset_YIH)
BIPHON_subset_IH_alt_y <- rbind(BIPHON_subset_IHy,BIPHON_subset_yIH)
BIPHON_subset_u_alt_y <- rbind(BIPHON_subset_uy,BIPHON_subset_yu)
View(BIPHON_subset_i_alt_y)
res_5
res_5 <- t.test(BIPHON_subset_IH_alt_Y$Correct,BIPHON_subset_i_alt_Y$Correct)
res_5
res_6 <- t.test(BIPHON_subset_i_alt_y$Correct,BIPHON_subset_IH_alt_y$Correct)
res_6
res <- t.test(BIPHON_subset_i_alt_y$Correct,BIPHON_subset_i_alt_Y$Correct)
res
res_2 <- t.test(BIPHON_subset_IH_alt_Y$Correct,BIPHON_subset_IH_alt_y$Correct)
res_2
res_4 <- t.test(BIPHON_subset_u_alt_y$Correct,BIPHON_subset_i_alt_y$Correct)
res_4
BIPHON_subset_uø <- subset(BIPHON3, critical_vowel_token == "uø")
BIPHON_subset_øu <- subset(BIPHON3, critical_vowel_token == "øu")
BIPHON_subset_ʊø <- subset(BIPHON3, critical_vowel_token == "ʊø")
BIPHON_subset_øʊ <- subset(BIPHON3, critical_vowel_token == "øʊ")
BIPHON_subset_ɯu <- subset(BIPHON3, critical_vowel_token == "ɯu")
BIPHON_subset_uɯ <- subset(BIPHON3, critical_vowel_token == "uɯ")
BIPHON_subset_ʊɯ <- subset(BIPHON3, critical_vowel_token == "ʊɯ")
BIPHON_subset_ɯʊ <- subset(BIPHON3, critical_vowel_token == "ɯʊ")
View(BIPHON_subset_ʊø)
View(BIPHON_subset_ʊø)
BIPHON_subset_u_alt_ø <- rbind(BIPHON_subset_uø,BIPHON_subset_øu)
BIPHON_subset_ʊ_alt_ø <- rbind(BIPHON_subset_ʊø,BIPHON_subset_øʊ)
BIPHON_subset_u_alt_ɯ <- rbind(BIPHON_subset_ɯu,BIPHON_subset_uɯ)
BIPHON_subset_ʊ_alt_ɯ <- rbind(BIPHON_subset_ʊɯ,BIPHON_subset_ɯʊ)
res_10 <- t.test(BIPHON_subset_u_alt_ø$Correct,BIPHON_subset_ʊ_alt_ø$Correct)
res_10
res_11 <- t.test(BIPHON_subset_u_alt_ɯ$Correct,BIPHON_subset_ʊ_alt_ɯ$Correct)
res_11
res_12 <- t.test(BIPHON_subset_u_alt_ɯ$Correct,BIPHON_subset_u_alt_ø$Correct)
res_12
res_13 <- t.test(BIPHON_subset_ʊ_alt_ø$Correct,BIPHON_subset_ʊ_alt_ɯ$Correct)
res_13
library(readxl)
vowel_formants_reduced <- read_excel("Desktop/lab stuff/vowel_formants_reduced.xls")
View(vowel_formants_reduced)
library(ggplot2)
vowel_formants_reduced$vowel <- as.factor(vowel_formants_reduced$vowel)
ggplot(data=vowel_formants_reduced, aes(x=F2, y=F1)) +
geom_point(aes(color=vowel)) +
scale_x_reverse(position = "top") +
scale_y_reverse(position = "right")
ggplot(data=vowel_formants_reduced, aes(x=F2, y=F1)) +
geom_text(aes(label=vowel, color=vowel)) +
scale_x_reverse(position = "top") +
scale_y_reverse(position = "right")
ggplot(data=vowel_formants_reduced, aes(x=F2, y=F1)) +
geom_text(aes(label=vowel, color=vowel, size=14)) +
scale_x_reverse(position = "top") +
scale_y_reverse(position = "right")
ggplot(data=vowel_formants_reduced, aes(x=F2, y=F1)) +
geom_text(aes(label=vowel, color=vowel), size=12) +
scale_x_reverse(position = "top") +
scale_y_reverse(position = "right")
ggplot(data=vowel_formants_reduced, aes(x=F2, y=F1)) +
geom_text(aes(label=vowel, color=vowel), size=10) +
scale_x_reverse(position = "top") +
scale_y_reverse(position = "right")
ggplot(data=vowel_formants_reduced, aes(x=F2, y=F1)) +
geom_text(aes(label=vowel, color=vowel), size=10) +
scale_x_reverse(position = "top") +
scale_y_reverse(position = "right") + theme(title="Vowels")
ggplot(data=vowel_formants_reduced, aes(x=F2, y=F1)) +
geom_text(aes(label=vowel, color=vowel), size=10) +
scale_x_reverse(position = "top") +
scale_y_reverse(position = "right") + theme(title = Vowels)
ggplot(data=vowel_formants_reduced, aes(x=F2, y=F1)) +
geom_text(aes(label=vowel, color=vowel), size=10) +
scale_x_reverse(position = "top") +
scale_y_reverse(position = "right") + theme(title = 'Vowels'')
ggplot(data=vowel_formants_reduced, aes(x=F2, y=F1)) +
geom_text(aes(label=vowel, color=vowel), size=10) +
scale_x_reverse(position = "top") +
scale_y_reverse(position = "right")
ggplot(data=vowel_formants_reduced, aes(x=F2, y=F1)) +
geom_text(aes(label=vowel, color=vowel), size=10) +
scale_x_reverse(position = "top") +
scale_y_reverse(position = "right") + theme(title = 'Vowels'')
ggplot(data=vowel_formants_reduced, aes(x=F2, y=F1)) +
geom_text(aes(label=vowel, color=vowel), size=10) +
scale_x_reverse(position = "top") +
scale_y_reverse(position = "right") + theme(title = 'Vowels')
ggplot(data=vowel_formants_reduced, aes(x=F2, y=F1)) +
geom_text(aes(label=vowel, color=vowel), size=10) +
scale_x_reverse(position = "top") +
scale_y_reverse(position = "right") + theme(title = element_text('Vowels')
ggplot(data=vowel_formants_reduced, aes(x=F2, y=F1)) +
geom_text(aes(label=vowel, color=vowel), size=10) +
scale_x_reverse(position = "top") +
scale_y_reverse(position = "right") + theme(title = element_text('Vowels'))
ggplot(data=vowel_formants_reduced, aes(x=F2, y=F1)) +
geom_text(aes(label=vowel, color=vowel), size=10) +
scale_x_reverse(position = "top") +
scale_y_reverse(position = "right")
ggplot(data=vowel_formants_reduced, aes(x=F2, y=F1)) +
geom_text(aes(label=vowel, color=vowel), size=8) +
scale_x_reverse(position = "top") +
scale_y_reverse(position = "right")
library(readxl)
vowel_formants_reduced <- read_excel("Desktop/lab stuff/vowel_formants_reduced.xls")
View(vowel_formants_reduced)
ggplot(data=vowel_formants_reduced, aes(x=F2, y=F1)) +
geom_text(aes(label=vowel, color=vowel), size=8) +
scale_x_reverse(position = "top") +
scale_y_reverse(position = "right")
sig <- table(1,2)
sig
sig <- table(1,2,3)
sig
sig <- table(1,5)
sig
sig <- table(1:3,5)
BIPHON_subset_Yu <- subset(BIPHON3, critical_vowel_token == "ʏu")
BIPHON_subset_uY <- subset(BIPHON3, critical_vowel_token == "uʏ")
BIPHON_subset_u_alt_Y <- rbind(BIPHON_subset_Yu,BIPHON_subset_uY)
res_15 <- t.test(BIPHON_subset_u_alt_Y$Correct,BIPHON_subset_u_alt_y$Correct)
View(BIPHON_subset_uY)
View(BIPHON_subset_uY)
BIPHON3
BIPHON_subset_Yu <- subset(BIPHON3, critical_vowel_token == "ʏu")
BIPHON3$critical_vowel_token
library(readxl)
BIPHON3 <- read_excel("Desktop/lab stuff/BIPHON3_plusdist.xlsx")
View(BIPHON3)
BIPHON_native ,- subset(BIPHON3, Nativeness == "1")
BIPHON_native <- subset(BIPHON3, Nativeness == "1")
BIPHON_nonnative <- subset(BIPHON3, Nativeness == "0")
head(BIPHON3)
nonnative_mdl <- lmer(Correct ~ critical_vowel_distance +(1|Subject), data=BIPHON3)
library(lme4)
nonnative_mdl <- lmer(Correct ~ critical_vowel_distance +(1|Subject), data=BIPHON3)
nonnative_mdl <- lmer(Correct ~ critical_vowel_distance...30 +(1|Subject), data=BIPHON3)
nonnative_mdl <- lmer(Correct ~ critical_vowel_dist +(1|Subject), data=BIPHON3)
summary(nonnative_mdl)
nonnative_mdl <- lmer(Correct ~ critical_vowel_dist +(1|Subject), data=BIPHON3, family="binomial")
nonnative_mdl <- glmer(Correct ~ critical_vowel_dist +(1|Subject), data=BIPHON3, family="binomial")
str(BIPHON3)
BIPHON_nonnative$Correct = as.factor(BIPHON_nonnative$Correct)
str(BIPHON3)
str(BIPHON3_nonnative)
str(BIPHON_nonnative)
nonnative_mdl <- glmer(Correct ~ critical_vowel_dist +(1|Subject), data=BIPHON3, family="binomial")
View(BIPHON_nonnative)
nonnative_mdl <- glmer(Correct ~ critical_vowel_dist +(1|Subject), data=BIPHON3, family="logit")
nonnative_mdl <- glmer(Correct ~ critical_vowel_dist +(1|Subject), data=BIPHON3, family="binomial"(link='logit'))
library(lmerTest)
library(dplyr) # this checks for normality
library(ggpubr) # this plots normality
install.packages("ggpubr")
set.seed(1234)
dplyr::sample_n(BIPHON3, 15)
ggqqplot(BIPHON3$Correct) # make qq plot
library(ggpubr)
set.seed(1234)
dplyr::sample_n(BIPHON3, 15)
ggqqplot(BIPHON3$Correct) # make qq plot
set.seed(1234)
dplyr::sample_n(BIPHON3, 15)
ggqqplot(BIPHON3$critical_vowel_dist) # make qq plot
ggdensity(BIPHON3$critical_vowel_dist,  # make density plot
main = "Density plot of RT",
xlab = "Reaction Time")
shapiro.test(BIPHON3$critical_vowel_dist) # test distribution against normal distribution
nonnative_mdl <- glmer(Correct ~ critical_vowel_dist +(1|Subject), data=BIPHON3, family=binomial(l))
nonnative_mdl <- glmer(Correct ~ critical_vowel_dist +(1|Subject), data=BIPHON3, family=binomial(link=logit))
nonnative_mdl <- glmer(Correct ~ critical_vowel_dist +(1|Subject), data=BIPHON3, family=binomial(link="logit"))
str(BIPHON_nonnative)
nonnative_mdl <- glme(Correct ~ critical_vowel_dist, data=BIPHON3, family=binomial(link="logit"))
nonnative_mdl <- lme(Correct ~ critical_vowel_dist, data=BIPHON3, family=binomial(link="logit"))
nonnative_mdl <- glm(Correct ~ critical_vowel_dist, data=BIPHON3, family=binomial(link="logit"))
nonnative_mdl
summary(nonnative_mdl)
View(nonnative_mdl)
View(nonnative_mdl)
nonnative_mdl <- glmer(Correct ~ critical_vowel_dist +(1|Subject), data=BIPHON3, family=binomial(link="logit"), glmerControl(optimizer = "bobyqa", optCtrl = list(maxfun = 100000)))
nonnative_mdl <- glm(Correct ~ critical_vowel_dist, data=BIPHON3, family=binomial(link="logit"))
anova(nonnative_mdl)
Anova(nonnative_mdl)
install.package('car')
install.packages('car')
library('car')
install.packages("openxlsx")
library('car')
Anova(nonnative_mdl)
nonnative_mdl <- glmer(Correct ~ critical_vowel_dist +(1|Subject), data=BIPHON3, family=binomial(link="logit"), glmerControl(optimizer = "bobyqa", optCtrl = list(maxfun = 2e5)))
nonnative_mdl <- glmer(Correct ~ critical_vowel_dist, data=BIPHON3, family=binomial(link="logit"), glmerControl(optimizer = "bobyqa", optCtrl = list(maxfun = 2e5)))
nonnative_mdl <- glmer(Correct ~ critical_vowel_dist + (1|Subject), data=BIPHON3, family=binomial(link="logit"), glmerControl(optimizer = "bobyqa", optCtrl = list(maxfun = 2e5)))
str(BIPHON_nonnative)
BIPHON_nonnative$Subject = as.factor(BIPHON_nonnative$Subject)
nonnative_mdl <- glmer(Correct ~ critical_vowel_dist + (1|Subject), data=BIPHON3, family=binomial(link="logit"), glmerControl(optimizer = "bobyqa", optCtrl = list(maxfun = 2e5)))
nonnative_mdl <- glmer(Correct ~ critical_vowel_dist + (1|Subject), data=BIPHON_nonnative, family=binomial(link="logit"), glmerControl(optimizer = "bobyqa", optCtrl = list(maxfun = 2e5)))
nonnative_mdl <- glmer(Correct ~ critical_vowel_dist + (1|unique_id), data=BIPHON_nonnative, family=binomial(link="logit"), glmerControl(optimizer = "bobyqa", optCtrl = list(maxfun = 2e5)))
str(BIPHON_nonnative)
BIPHON_nonnative$unique_id = as.factor(BIPHON_nonnative$unique_id)
nonnative_mdl <- glmer(Correct ~ critical_vowel_dist + (1|unique_id), data=BIPHON_nonnative, family=binomial(link="logit"), glmerControl(optimizer = "bobyqa", optCtrl = list(maxfun = 2e5)))
ggplot(data=vowel_formants_reduced, aes(x=F2, y=F1)) +
geom_text(aes(label=vowel, color=vowel), size=8) +
scale_x_reverse(position = "top") +
scale_y_reverse(position = "right")
library(ggplot)
library(ggplot2)
library(ggplot)
ggplot(data=vowel_formants_reduced, aes(x=F2, y=F1)) +
geom_text(aes(label=vowel, color=vowel), size=8) +
scale_x_reverse(position = "top") +
scale_y_reverse(position = "right")
View(vowel_formants_reduced)
library(readxl)
vowel_formants_reduced_2 <- read_excel("Desktop/lab stuff/vowel_formants_reduced_2.xls")
View(vowel_formants_reduced_2)
ggplot(data=vowel_formants_reduced_2, aes(x=F2, y=F1)) +
geom_text(aes(label=vowel, color=vowel), size=8) +
scale_x_reverse(position = "top") +
scale_y_reverse(position = "right")
install.packages(c("effects", "emmeans", "janitor", "psycho"))
## Queer Speech Data Analysis and Visualization Treasure Trove
## Author: Ben Lang, blang@ucsd.edu
library(lmerTest)
library(dplyr) # this checks for normality
library(ggpubr) # this plots normality
library(magrittr)
library(effects)
#library(ggplot2)
library(tidyr)
#library(scales)
library(reshape2)
library(lme4)
library(emmeans)
library(forcats)
library(psycho)
library(tibble)
library(janitor)
setwd('/Users/bcl/Documents/GitHub/queer_speech/qualtrics_data/mark1_jan28/')
queer = read.csv('queer-speech_February 1, 2022_22.51.csv')
#cleaning data down to just ratings, trial type, and stimulus ID
# queer <- subset(queer, Status == 0 | Status == "Response Type") # just for if there's people that don't complete the survey
queer <- select(queer, -contains(c("First.Click","Last.Click","Page.Submit","Click.Count"))) # remove all the time counts, can add in later if needed
# queer$Participant <- 1:nrow(queer)-1
queer <- select(queer, -c(StartDate, EndDate, ResponseId, UserLanguage, Consent, HC1, HC2, RecipientLastName, RecipientFirstName, RecipientEmail, ExternalReference, LocationLatitude, LocationLongitude, DistributionChannel, IPAddress, Progress, Status, Finished, RecordedDate, Duration..in.seconds.))
queer <- select(queer, -c(P1_1:P5_1)) # eliminate practice questions
queer <- select(queer, -c(D1:id)) # eliminate practice questions
# queer <- queer %>% relocate(D2:Q47, .before = 1)
# queer <- queer %>% relocate(Q56, .before = 1)
queer <- queer[-2,]
queer <- add_column(queer, Participant = 1:nrow(queer)-1, .before = 1)
queer[1,] <- gsub(".*- (.+) -.*", "\\1", queer[1,])
# splitting dfs to then concatenate
queer_qid <- queer[-1,]
queer_qid_long <- queer_qid %>% gather(Qualtrics_Trial_Num, Rating, X1_Q36_1:X33_Q62_1)
View(queer)
View(queer_qid)
View(queer_qid_long)
setwd('/Users/bcl/Documents/GitHub/queer_speech/qualtrics_data/mark1_jan28/')
queer = read.csv('queer-speech_February 1, 2022_22.51.csv')
#cleaning data down to just ratings, trial type, and stimulus ID
# queer <- subset(queer, Status == 0 | Status == "Response Type") # just for if there's people that don't complete the survey
queer <- select(queer, -contains(c("First.Click","Last.Click","Page.Submit","Click.Count"))) # remove all the time counts, can add in later if needed
# queer$Participant <- 1:nrow(queer)-1
queer <- select(queer, -c(StartDate, EndDate, ResponseId, UserLanguage, Consent, HC1, HC2, RecipientLastName, RecipientFirstName, RecipientEmail, ExternalReference, LocationLatitude, LocationLongitude, DistributionChannel, IPAddress, Progress, Status, Finished, RecordedDate, Duration..in.seconds.))
queer <- select(queer, -c(P1_1:P5_1)) # eliminate practice questions
queer <- select(queer, -c(D1:id)) # eliminate practice questions
# queer <- queer %>% relocate(D2:Q47, .before = 1)
# queer <- queer %>% relocate(Q56, .before = 1)
queer <- queer[-2,]
queer <- add_column(queer, Participant = 1:nrow(queer)-1, .before = 1)
queer[1,] <- gsub(".*- (.+) -.*", "\\1", queer[1,])
View(queer)
queer = read.csv('queer-speech_February 1, 2022_22.51.csv')

library(magrittr)
# library(effects)
# library(ggplot2)
library(tidyr)
# library(scales)
library(reshape2)
# library(lme4)
# library(emmeans)
library(forcats)
# library(psycho)
library(tibble)
library(janitor)
library(data.table)
setwd('/Users/bcl/Documents/GitHub/queer_speech/qualtrics_data/mark1_jan28/')
options(stringsAsFactors=F)
queer = read.csv('queer-speech_February 1, 2022_22.51.csv')
#cleaning data down to just ratings, trial type, and stimulus ID
# queer <- subset(queer, Status == 0 | Status == "Response Type") # just for if there's people that don't complete the survey
queer <- select(queer, -contains(c("First.Click","Last.Click","Page.Submit","Click.Count"))) # remove all the time counts, can add in later if needed
# queer$Participant <- 1:nrow(queer)-1
queer <- select(queer, -c(StartDate, EndDate, ResponseId, UserLanguage, Consent, HC1, HC2, RecipientLastName, RecipientFirstName, RecipientEmail, ExternalReference, LocationLatitude, LocationLongitude, DistributionChannel, IPAddress, Progress, Status, Finished, RecordedDate, Duration..in.seconds.))
queer <- select(queer, -c(P1_1:P5_1)) # eliminate practice questions
queer <- select(queer, -c(D1:id)) # eliminate practice questions
# queer <- queer %>% relocate(D2:Q47, .before = 1)
# queer <- queer %>% relocate(Q56, .before = 1)
queer <- queer[-2,]
queer[1,] <- gsub(".*- (.+) -.*", "\\1", queer[1,]) # works on iMac, for some reason not on laptop, supposed to just grab URLs
queer <- add_column(queer, Participant = 1:nrow(queer)-1, .before = 1)
# splitting dfs to then concatenate
queer_qid <- queer[-1,]
queer_qid_long <- queer_qid %>% gather(Qualtrics_Trial_Num, Rating, X1_Q36_1:X33_Q62_1)
View(queer_qid)
## Queer Speech Data Analysis and Visualization Treasure Trove
## Author: Ben Lang, blang@ucsd.edu
# library(lmerTest)
library(dplyr) # this checks for normality
# library(ggpubr) # this plots normality
library(magrittr)
# library(effects)
# library(ggplot2)
library(tidyr)
# library(scales)
library(reshape2)
# library(lme4)
# library(emmeans)
library(forcats)
# library(psycho)
library(tibble)
library(janitor)
library(data.table)
setwd('/Users/bcl/Documents/GitHub/queer_speech/qualtrics_data/mark1_jan28/')
options(stringsAsFactors=F)
queer = read.csv('queer-speech_February 1, 2022_22.51.csv')
#cleaning data down to just ratings, trial type, and stimulus ID
# queer <- subset(queer, Status == 0 | Status == "Response Type") # just for if there's people that don't complete the survey
queer <- select(queer, -contains(c("First.Click","Last.Click","Page.Submit","Click.Count"))) # remove all the time counts, can add in later if needed
# queer$Participant <- 1:nrow(queer)-1
queer <- select(queer, -c(StartDate, EndDate, ResponseId, UserLanguage, Consent, HC1, HC2, RecipientLastName, RecipientFirstName, RecipientEmail, ExternalReference, LocationLatitude, LocationLongitude, DistributionChannel, IPAddress, Progress, Status, Finished, RecordedDate, Duration..in.seconds.))
queer <- select(queer, -c(P1_1:P5_1)) # eliminate practice questions
queer <- select(queer, -c(D1:id)) # eliminate practice questions
# queer <- queer %>% relocate(D2:Q47, .before = 1)
# queer <- queer %>% relocate(Q56, .before = 1)
queer <- queer[-2,]
queer[1,] <- gsub(".*- (.+) -.*", "\\1", queer[1,]) # works on iMac, for some reason not on laptop, supposed to just grab URLs
queer <- add_column(queer, Participant = 1:nrow(queer)-1, .before = 1)
# splitting dfs to then concatenate
queer_qid <- queer[-1,]
queer_qid_long <- queer_qid %>% gather(Qualtrics_Trial_Num, Rating, X1_Q36_1:X33_Q62_1)
#queer[1,] <- queer %>% separate(X1_Q36_1:X33_Q62_1, Question, Token)
queer_stimname <- row_to_names(queer, row_number = 1)
View(queer_qid)
View(queer_qid_long)
View(queer_stimname)
View(queer_stimname)
queer_stimname_long <- queer_stimname %>% spread(Trial_Type, Rating)
?patterns()
queer_stimname_long <- queer_stimname %>% do.call(rbind,
lapply(seq(2, ncol(input), 3), function(i){
input[, c(1, i:(i + 2))]
})
)
queer_stimname_long <- queer_stimname %>% do.call(rbind,
lapply(seq(2, ncol(queer_stimname), 3), function(i){
queer_stimname[, c(1, i:(i + 2))]
})
queer_stimname_long <- queer_stimname %>% do.call(rbind,
lapply(seq(2, ncol(queer_stimname), 3), function(i){
queer_stimname[, c(1, i:(i + 2))]
})
)
queer_stimname_long <- queer_stimname %>% melt(
input,
id = "Participant",
value.name = c("question", "points", "max_points")
)
queer_stimname_long <- queer_stimname %>% melt(
id = "Participant",
value.name = c("question", "points", "max_points")
)
## Queer Speech Data Analysis and Visualization Treasure Trove
## Author: Ben Lang, blang@ucsd.edu
# library(lmerTest)
library(dplyr) # this checks for normality
# library(ggpubr) # this plots normality
library(magrittr)
# library(effects)
# library(ggplot2)
library(tidyr)
# library(scales)
library(reshape2)
# library(lme4)
# library(emmeans)
library(forcats)
# library(psycho)
library(tibble)
library(janitor)
library(data.table)
setwd('/Users/bcl/Documents/GitHub/queer_speech/qualtrics_data/mark1_jan28/')
options(stringsAsFactors=F)
queer = read.csv('queer-speech_February 1, 2022_22.51.csv')
#cleaning data down to just ratings, trial type, and stimulus ID
# queer <- subset(queer, Status == 0 | Status == "Response Type") # just for if there's people that don't complete the survey
queer <- select(queer, -contains(c("First.Click","Last.Click","Page.Submit","Click.Count"))) # remove all the time counts, can add in later if needed
# queer$Participant <- 1:nrow(queer)-1
queer <- select(queer, -c(StartDate, EndDate, ResponseId, UserLanguage, Consent, HC1, HC2, RecipientLastName, RecipientFirstName, RecipientEmail, ExternalReference, LocationLatitude, LocationLongitude, DistributionChannel, IPAddress, Progress, Status, Finished, RecordedDate, Duration..in.seconds.))
queer <- select(queer, -c(P1_1:P5_1)) # eliminate practice questions
queer <- select(queer, -c(D1:id)) # eliminate practice questions
# queer <- queer %>% relocate(D2:Q47, .before = 1)
# queer <- queer %>% relocate(Q56, .before = 1)
queer <- queer[-2,]
queer[1,] <- gsub(".*- (.+) -.*", "\\1", queer[1,]) # works on iMac, for some reason not on laptop, supposed to just grab URLs
queer <- add_column(queer, Participant = 1:nrow(queer)-1, .before = 1)
# splitting dfs to then concatenate
queer_qid <- queer[-1,]
queer_qid_long <- queer_qid %>% gather(Qualtrics_Trial_Num, Rating, X1_Q36_1:X33_Q62_1)
#queer[1,] <- queer %>% separate(X1_Q36_1:X33_Q62_1, Question, Token)
queer_stimname <- row_to_names(queer, row_number = 1)
names(queer_stimname)[names(queer_stimname) == '0'] <- 'Participant'
queer_stimname$row_num <- seq.int(nrow(stimname))
## Queer Speech Data Analysis and Visualization Treasure Trove
## Author: Ben Lang, blang@ucsd.edu
# library(lmerTest)
library(dplyr) # this checks for normality
# library(ggpubr) # this plots normality
library(magrittr)
# library(effects)
# library(ggplot2)
library(tidyr)
# library(scales)
library(reshape2)
# library(lme4)
# library(emmeans)
library(forcats)
# library(psycho)
library(tibble)
library(janitor)
library(data.table)
setwd('/Users/bcl/Documents/GitHub/queer_speech/qualtrics_data/mark1_jan28/')
options(stringsAsFactors=F)
queer = read.csv('queer-speech_February 1, 2022_22.51.csv')
#cleaning data down to just ratings, trial type, and stimulus ID
# queer <- subset(queer, Status == 0 | Status == "Response Type") # just for if there's people that don't complete the survey
queer <- select(queer, -contains(c("First.Click","Last.Click","Page.Submit","Click.Count"))) # remove all the time counts, can add in later if needed
# queer$Participant <- 1:nrow(queer)-1
queer <- select(queer, -c(StartDate, EndDate, ResponseId, UserLanguage, Consent, HC1, HC2, RecipientLastName, RecipientFirstName, RecipientEmail, ExternalReference, LocationLatitude, LocationLongitude, DistributionChannel, IPAddress, Progress, Status, Finished, RecordedDate, Duration..in.seconds.))
queer <- select(queer, -c(P1_1:P5_1)) # eliminate practice questions
queer <- select(queer, -c(D1:id)) # eliminate practice questions
# queer <- queer %>% relocate(D2:Q47, .before = 1)
# queer <- queer %>% relocate(Q56, .before = 1)
queer <- queer[-2,]
queer[1,] <- gsub(".*- (.+) -.*", "\\1", queer[1,]) # works on iMac, for some reason not on laptop, supposed to just grab URLs
queer <- add_column(queer, Participant = 1:nrow(queer)-1, .before = 1)
# splitting dfs to then concatenate
queer_qid <- queer[-1,]
queer_qid_long <- queer_qid %>% gather(Qualtrics_Trial_Num, Rating, X1_Q36_1:X33_Q62_1)
#queer[1,] <- queer %>% separate(X1_Q36_1:X33_Q62_1, Question, Token)
queer_stimname <- row_to_names(queer, row_number = 1)
names(queer_stimname)[names(queer_stimname) == '0'] <- 'Participant'
queer_stimname$row_num <- seq.int(nrow(queer_stimname))
## Queer Speech Data Analysis and Visualization Treasure Trove
## Author: Ben Lang, blang@ucsd.edu
# library(lmerTest)
library(dplyr) # this checks for normality
# library(ggpubr) # this plots normality
library(magrittr)
# library(effects)
# library(ggplot2)
library(tidyr)
# library(scales)
library(reshape2)
# library(lme4)
# library(emmeans)
library(forcats)
# library(psycho)
library(tibble)
library(janitor)
library(data.table)
setwd('/Users/bcl/Documents/GitHub/queer_speech/qualtrics_data/mark1_jan28/')
options(stringsAsFactors=F)
queer = read.csv('queer-speech_February 1, 2022_22.51.csv')
#cleaning data down to just ratings, trial type, and stimulus ID
# queer <- subset(queer, Status == 0 | Status == "Response Type") # just for if there's people that don't complete the survey
queer <- select(queer, -contains(c("First.Click","Last.Click","Page.Submit","Click.Count"))) # remove all the time counts, can add in later if needed
# queer$Participant <- 1:nrow(queer)-1
queer <- select(queer, -c(StartDate, EndDate, ResponseId, UserLanguage, Consent, HC1, HC2, RecipientLastName, RecipientFirstName, RecipientEmail, ExternalReference, LocationLatitude, LocationLongitude, DistributionChannel, IPAddress, Progress, Status, Finished, RecordedDate, Duration..in.seconds.))
queer <- select(queer, -c(P1_1:P5_1)) # eliminate practice questions
queer <- select(queer, -c(D1:id)) # eliminate practice questions
# queer <- queer %>% relocate(D2:Q47, .before = 1)
# queer <- queer %>% relocate(Q56, .before = 1)
queer <- queer[-2,]
queer[1,] <- gsub(".*- (.+) -.*", "\\1", queer[1,]) # works on iMac, for some reason not on laptop, supposed to just grab URLs
queer <- add_column(queer, Participant = 1:nrow(queer)-1, .before = 1)
# splitting dfs to then concatenate
queer_qid <- queer[-1,]
queer_qid_long <- queer_qid %>% gather(Qualtrics_Trial_Num, Rating, X1_Q36_1:X33_Q62_1)
#queer[1,] <- queer %>% separate(X1_Q36_1:X33_Q62_1, Question, Token)
queer_stimname <- row_to_names(queer, row_number = 1)
names(queer_stimname)[names(queer_stimname) == '0'] <- 'Participant'
View(queer_stimname)
View(queer_qid_long)
queer_stimname_long <- queer_stimname %>% gather(Trial_Type, Rating)
View(queer_stimname_long)
## Queer Speech Data Analysis and Visualization Treasure Trove
## Author: Ben Lang, blang@ucsd.edu
# library(lmerTest)
library(dplyr) # this checks for normality
# library(ggpubr) # this plots normality
library(magrittr)
# library(effects)
# library(ggplot2)
library(tidyr)
# library(scales)
library(reshape2)
# library(lme4)
# library(emmeans)
library(forcats)
# library(psycho)
library(tibble)
library(janitor)
library(data.table)
setwd('/Users/bcl/Documents/GitHub/queer_speech/qualtrics_data/mark1_jan28/')
options(stringsAsFactors=F)
queer = read.csv('queer-speech_February 1, 2022_22.51.csv')
#cleaning data down to just ratings, trial type, and stimulus ID
# queer <- subset(queer, Status == 0 | Status == "Response Type") # just for if there's people that don't complete the survey
queer <- select(queer, -contains(c("First.Click","Last.Click","Page.Submit","Click.Count"))) # remove all the time counts, can add in later if needed
# queer$Participant <- 1:nrow(queer)-1
queer <- select(queer, -c(StartDate, EndDate, ResponseId, UserLanguage, Consent, HC1, HC2, RecipientLastName, RecipientFirstName, RecipientEmail, ExternalReference, LocationLatitude, LocationLongitude, DistributionChannel, IPAddress, Progress, Status, Finished, RecordedDate, Duration..in.seconds.))
queer <- select(queer, -c(P1_1:P5_1)) # eliminate practice questions
queer <- select(queer, -c(D1:id)) # eliminate practice questions
# queer <- queer %>% relocate(D2:Q47, .before = 1)
# queer <- queer %>% relocate(Q56, .before = 1)
queer <- queer[-2,]
queer[1,] <- gsub(".*- (.+) -.*", "\\1", queer[1,]) # works on iMac, for some reason not on laptop, supposed to just grab URLs
queer <- add_column(queer, Participant = 1:nrow(queer)-1, .before = 1)
# splitting dfs to then concatenate
queer_qid <- queer[-1,]
queer_qid_long <- queer_qid %>% gather(Qualtrics_Trial_Num, Rating, X1_Q36_1:X33_Q62_1)
#queer[1,] <- queer %>% separate(X1_Q36_1:X33_Q62_1, Question, Token)
queer_stimname <- row_to_names(queer, row_number = 1)
names(queer_stimname)[names(queer_stimname) == '0'] <- 'Participant'
View(queer_qid)
ncols(queer_stimname)
ncol(queer_stimname)
colnames(queer_stimname) <- c(ncol(queer_stimname))
colnames(queer_stimname) <- c(1:ncol(queer_stimname))
View(queer_stimname)
queer_stimname_long <- queer_stimname %>% gather(Trial_Type, Rating)
View(queer_stimname_long)
## Queer Speech Data Analysis and Visualization Treasure Trove
## Author: Ben Lang, blang@ucsd.edu
# library(lmerTest)
library(dplyr) # this checks for normality
# library(ggpubr) # this plots normality
library(magrittr)
# library(effects)
# library(ggplot2)
library(tidyr)
# library(scales)
library(reshape2)
# library(lme4)
# library(emmeans)
library(forcats)
# library(psycho)
library(tibble)
library(janitor)
library(data.table)
setwd('/Users/bcl/Documents/GitHub/queer_speech/qualtrics_data/mark1_jan28/')
options(stringsAsFactors=F)
queer = read.csv('queer-speech_February 1, 2022_22.51.csv')
#cleaning data down to just ratings, trial type, and stimulus ID
# queer <- subset(queer, Status == 0 | Status == "Response Type") # just for if there's people that don't complete the survey
queer <- select(queer, -contains(c("First.Click","Last.Click","Page.Submit","Click.Count"))) # remove all the time counts, can add in later if needed
# queer$Participant <- 1:nrow(queer)-1
queer <- select(queer, -c(StartDate, EndDate, ResponseId, UserLanguage, Consent, HC1, HC2, RecipientLastName, RecipientFirstName, RecipientEmail, ExternalReference, LocationLatitude, LocationLongitude, DistributionChannel, IPAddress, Progress, Status, Finished, RecordedDate, Duration..in.seconds.))
queer <- select(queer, -c(P1_1:P5_1)) # eliminate practice questions
queer <- select(queer, -c(D1:id)) # eliminate practice questions
# queer <- queer %>% relocate(D2:Q47, .before = 1)
# queer <- queer %>% relocate(Q56, .before = 1)
queer <- queer[-2,]
queer[1,] <- gsub(".*- (.+) -.*", "\\1", queer[1,]) # works on iMac, for some reason not on laptop, supposed to just grab URLs
queer <- add_column(queer, Participant = 1:nrow(queer)-1, .before = 1)
# splitting dfs to then concatenate
queer_qid <- queer[-1,]
queer_qid_long <- queer_qid %>% gather(Qualtrics_Trial_Num, Rating, X1_Q36_1:X33_Q62_1)
#queer[1,] <- queer %>% separate(X1_Q36_1:X33_Q62_1, Question, Token)
queer_stimname <- row_to_names(queer, row_number = 1)
names(queer_stimname)[names(queer_stimname) == '0'] <- 'Participant'
queer_stimname <- rbind(c(1:ncol(queer_stimname)))
## Queer Speech Data Analysis and Visualization Treasure Trove
## Author: Ben Lang, blang@ucsd.edu
# library(lmerTest)
library(dplyr) # this checks for normality
# library(ggpubr) # this plots normality
library(magrittr)
# library(effects)
# library(ggplot2)
library(tidyr)
# library(scales)
library(reshape2)
# library(lme4)
# library(emmeans)
library(forcats)
# library(psycho)
library(tibble)
library(janitor)
library(data.table)
setwd('/Users/bcl/Documents/GitHub/queer_speech/qualtrics_data/mark1_jan28/')
options(stringsAsFactors=F)
queer = read.csv('queer-speech_February 1, 2022_22.51.csv')
#cleaning data down to just ratings, trial type, and stimulus ID
# queer <- subset(queer, Status == 0 | Status == "Response Type") # just for if there's people that don't complete the survey
queer <- select(queer, -contains(c("First.Click","Last.Click","Page.Submit","Click.Count"))) # remove all the time counts, can add in later if needed
# queer$Participant <- 1:nrow(queer)-1
queer <- select(queer, -c(StartDate, EndDate, ResponseId, UserLanguage, Consent, HC1, HC2, RecipientLastName, RecipientFirstName, RecipientEmail, ExternalReference, LocationLatitude, LocationLongitude, DistributionChannel, IPAddress, Progress, Status, Finished, RecordedDate, Duration..in.seconds.))
queer <- select(queer, -c(P1_1:P5_1)) # eliminate practice questions
queer <- select(queer, -c(D1:id)) # eliminate practice questions
# queer <- queer %>% relocate(D2:Q47, .before = 1)
# queer <- queer %>% relocate(Q56, .before = 1)
queer <- queer[-2,]
queer[1,] <- gsub(".*- (.+) -.*", "\\1", queer[1,]) # works on iMac, for some reason not on laptop, supposed to just grab URLs
queer <- add_column(queer, Participant = 1:nrow(queer)-1, .before = 1)
# splitting dfs to then concatenate
queer_qid <- queer[-1,]
queer_qid_long <- queer_qid %>% gather(Qualtrics_Trial_Num, Rating, X1_Q36_1:X33_Q62_1)
#queer[1,] <- queer %>% separate(X1_Q36_1:X33_Q62_1, Question, Token)
queer_stimname <- row_to_names(queer, row_number = 1)
names(queer_stimname)[names(queer_stimname) == '0'] <- 'Participant'
queer_stimname_ls <- rbind(c(1:ncol(queer_stimname)))
queer_stimname[nrow(queer_stimname) + 1,] = queer_stimname_ls
View(queer_stimname)
queer_stimname <- row_to_names(queer, row_number = 7.1)
View(queer_stimname)
## Queer Speech Data Analysis and Visualization Treasure Trove
## Author: Ben Lang, blang@ucsd.edu
# library(lmerTest)
library(dplyr) # this checks for normality
# library(ggpubr) # this plots normality
library(magrittr)
# library(effects)
# library(ggplot2)
library(tidyr)
# library(scales)
library(reshape2)
# library(lme4)
# library(emmeans)
library(forcats)
# library(psycho)
library(tibble)
library(janitor)
library(data.table)
setwd('/Users/bcl/Documents/GitHub/queer_speech/qualtrics_data/mark1_jan28/')
options(stringsAsFactors=F)
queer = read.csv('queer-speech_February 1, 2022_22.51.csv')
#cleaning data down to just ratings, trial type, and stimulus ID
# queer <- subset(queer, Status == 0 | Status == "Response Type") # just for if there's people that don't complete the survey
queer <- select(queer, -contains(c("First.Click","Last.Click","Page.Submit","Click.Count"))) # remove all the time counts, can add in later if needed
# queer$Participant <- 1:nrow(queer)-1
queer <- select(queer, -c(StartDate, EndDate, ResponseId, UserLanguage, Consent, HC1, HC2, RecipientLastName, RecipientFirstName, RecipientEmail, ExternalReference, LocationLatitude, LocationLongitude, DistributionChannel, IPAddress, Progress, Status, Finished, RecordedDate, Duration..in.seconds.))
queer <- select(queer, -c(P1_1:P5_1)) # eliminate practice questions
queer <- select(queer, -c(D1:id)) # eliminate practice questions
# queer <- queer %>% relocate(D2:Q47, .before = 1)
# queer <- queer %>% relocate(Q56, .before = 1)
queer <- queer[-2,]
queer[1,] <- gsub(".*- (.+) -.*", "\\1", queer[1,]) # works on iMac, for some reason not on laptop, supposed to just grab URLs
queer <- add_column(queer, Participant = 1:nrow(queer)-1, .before = 1)
# splitting dfs to then concatenate
queer_qid <- queer[-1,]
queer_qid_long <- queer_qid %>% gather(Qualtrics_Trial_Num, Rating, X1_Q36_1:X33_Q62_1)
#queer[1,] <- queer %>% separate(X1_Q36_1:X33_Q62_1, Question, Token)
queer_stimname <- row_to_names(queer, row_number = 1)
names(queer_stimname)[names(queer_stimname) == '0'] <- 'Participant'
queer_stimname_ls <- rbind(c(1:ncol(queer_stimname)))
queer_stimname[nrow(queer_stimname) + 1,] = queer_stimname_ls
queer_stimname_long <- queer_stimname %>% gather(Trial_Type, Rating)
View(queer_stimname_long)
View(queer_stimname)
View(queer_qid)
View(queer_qid_long)
## Queer Speech Data Analysis and Visualization Treasure Trove
## Author: Ben Lang, blang@ucsd.edu
# library(lmerTest)
library(dplyr) # this checks for normality
# library(ggpubr) # this plots normality
library(magrittr)
# library(effects)
# library(ggplot2)
library(tidyr)
# library(scales)
library(reshape2)
# library(lme4)
# library(emmeans)
library(forcats)
# library(psycho)
library(tibble)
library(janitor)
library(data.table)
setwd('/Users/bcl/Documents/GitHub/queer_speech/qualtrics_data/mark1_jan28/')
options(stringsAsFactors=F)
queer = read.csv('queer-speech_February 1, 2022_22.51.csv')
#cleaning data down to just ratings, trial type, and stimulus ID
# queer <- subset(queer, Status == 0 | Status == "Response Type") # just for if there's people that don't complete the survey
queer <- select(queer, -contains(c("First.Click","Last.Click","Page.Submit","Click.Count"))) # remove all the time counts, can add in later if needed
# queer$Participant <- 1:nrow(queer)-1
queer <- select(queer, -c(StartDate, EndDate, ResponseId, UserLanguage, Consent, HC1, HC2, RecipientLastName, RecipientFirstName, RecipientEmail, ExternalReference, LocationLatitude, LocationLongitude, DistributionChannel, IPAddress, Progress, Status, Finished, RecordedDate, Duration..in.seconds.))
queer <- select(queer, -c(P1_1:P5_1)) # eliminate practice questions
queer <- select(queer, -c(D1:id)) # eliminate practice questions
# queer <- queer %>% relocate(D2:Q47, .before = 1)
# queer <- queer %>% relocate(Q56, .before = 1)
queer <- queer[-2,]
queer[1,] <- gsub(".*- (.+) -.*", "\\1", queer[1,]) # works on iMac, for some reason not on laptop, supposed to just grab URLs
queer <- add_column(queer, Participant = 1:nrow(queer)-1, .before = 1)
# splitting dfs to then concatenate
queer_qid <- queer[-1,]
queer_qid_long <- queer_qid %>% gather(Qualtrics_Trial_Num, Rating, X1_Q36_1:X33_Q62_1)
#queer[1,] <- queer %>% separate(X1_Q36_1:X33_Q62_1, Question, Token)
queer_stimname <- row_to_names(queer, row_number = 1)
names(queer_stimname)[names(queer_stimname) == '0'] <- 'Participant'
View(queer_stimname)
View(queer)
View(queer_qid)
View(queer_qid_long)
queer_stimname_long <- queer_stimname %>% gather(Trial_Type, Rating)
View(queer_stimname_long)
queer_stimname_long <- queer_stimname %>% gather(Trial_Type, Rating, -Participant)
queer_stimname_long <- queer_stimname %>% gather(Trial_Type, Rating)
View(queer_stimname)
View(queer_stimname_long)
## Queer Speech Data Analysis and Visualization Treasure Trove
## Author: Ben Lang, blang@ucsd.edu
# library(lmerTest)
library(dplyr) # this checks for normality
# library(ggpubr) # this plots normality
library(magrittr)
# library(effects)
# library(ggplot2)
library(tidyr)
# library(scales)
library(reshape2)
# library(lme4)
# library(emmeans)
library(forcats)
# library(psycho)
library(tibble)
library(janitor)
library(data.table)
setwd('/Users/bcl/Documents/GitHub/queer_speech/qualtrics_data/mark1_jan28/')
options(stringsAsFactors=F)
queer = read.csv('queer-speech_February 1, 2022_22.51.csv')
#cleaning data down to just ratings, trial type, and stimulus ID
# queer <- subset(queer, Status == 0 | Status == "Response Type") # just for if there's people that don't complete the survey
queer <- select(queer, -contains(c("First.Click","Last.Click","Page.Submit","Click.Count"))) # remove all the time counts, can add in later if needed
# queer$Participant <- 1:nrow(queer)-1
queer <- select(queer, -c(StartDate, EndDate, ResponseId, UserLanguage, Consent, HC1, HC2, RecipientLastName, RecipientFirstName, RecipientEmail, ExternalReference, LocationLatitude, LocationLongitude, DistributionChannel, IPAddress, Progress, Status, Finished, RecordedDate, Duration..in.seconds.))
queer <- select(queer, -c(P1_1:P5_1)) # eliminate practice questions
queer <- select(queer, -c(D1:id)) # eliminate practice questions
# queer <- queer %>% relocate(D2:Q47, .before = 1)
# queer <- queer %>% relocate(Q56, .before = 1)
queer <- queer[-2,]
queer[1,] <- gsub(".*- (.+) -.*", "\\1", queer[1,]) # works on iMac, for some reason not on laptop, supposed to just grab URLs
queer <- add_column(queer, Participant = 1:nrow(queer)-1, .before = 1)
# splitting dfs to then concatenate
queer_qid <- queer[-1,]
queer_qid_long <- queer_qid %>% gather(Qualtrics_Trial_Num, Rating, X1_Q36_1:X33_Q62_1)
View(queer)
View(queer_qid)
View(queer)
View(queer_qid)
View(queer)
View(queer_qid)
View(queer)
View(queer_qid)
View(queer)
View(queer_qid)
queer %>% fill(X1_Q36_1:X33_Q62_1)
View(queer_qid_long)
View(queer_qid)
queer[2,2]
queer[2,1]
queer[1,2]
queer[1,]
queer %>%
gather(X1_Q36_1:X33_Q62_1, queer[1,], -Participant) %>%
separate(X1_Q36_1:X33_Q62_1, into = c("result", "time"), sep = 6) %>%
spread(result, queer[1,]) %>%
mutate(time = gsub("_", "", time))
merged_queer <- merge(queer_stimname, queer_qid)
View(merged_queer)
make.unique(c(queer[1,]))
make.unique(c(queer[2,]))
queer[1,]
make.unique(c(queer[1,]))
